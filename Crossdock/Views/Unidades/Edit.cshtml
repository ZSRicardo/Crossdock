@model Crossdock.Models.Unidades

@{
    ViewBag.Title = "Edit";
}
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>

<div class="row align-items-center justify-content-center mt-3">
    <div class="col-6 mt-3">
        <h4 class="text-center">Editar unidad</h4>
    </div>
</div>

<div class="row align-items-center justify-content-center mt-3">
    <div class="col-md-7">
        <form method="post">
            @Html.AntiForgeryToken()
            <div class="accordion-item">
                <div class="accordion-body">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.UnidadID)
                    <div class="mb-3">
                        @Html.LabelFor(model => model.Modelo, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.Modelo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Modelo, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.Marca, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.Marca, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Marca, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.Placas, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.Placas, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Placas, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.TipoUnidadID, htmlAttributes: new { @class = "form-label" })
                        @Html.DropDownList(name: "TipoUnidadID", selectList: null, "-- selecciona una opción --", new { @class = "form-control form-select" })
                        @Html.ValidationMessageFor(model => model.TipoUnidadID, "", new { @class = "text-danger" })
                    </div>

                    <div class="row align-items-center justify-content-center mt-3">
                        <div class="col-6 mt-3">
                            <div class="d-flex justify-content-evenly mt-4 mb-5 btn-group">
                                <input type="submit" value="Guardar" class="btn btn-outline-success" />
                                @Html.ActionLink("Regresar", "Index", new { area = "" }, new { @class = "btn btn-outline-warning" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
