@model Crossdock.Models.Operadores

@{
    ViewBag.Title = "Details";
}
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>

<div class="row align-items-center justify-content-center mt-3">
    <div class="col-6 mt-3">
        <h4 class="text-center">Detalles operador</h4>
    </div>
</div>

<div class="row align-items-center justify-content-center mt-3">
    <div class="col-md-7">
        <form method="post">
            <div class="accordion-item">
                <div class="accordion-body">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="mb-3">
                        @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control", Disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.TipoOperadorDescripcion, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.TipoOperadorDescripcion, new { htmlAttributes = new { @class = "form-control", Disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.TipoOperadorDescripcion, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.Celular, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.Celular, new { htmlAttributes = new { @class = "form-control", Disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.Celular, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", Disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.NumeroExt, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.NumeroExt, new { htmlAttributes = new { @class = "form-control", Disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.NumeroExt, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.NumeroInt, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.NumeroInt, new { htmlAttributes = new { @class = "form-control", Disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.NumeroInt, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.Colonia, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.Colonia, new { htmlAttributes = new { @class = "form-control", Disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.Colonia, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.CodigoPostal, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.CodigoPostal, new { htmlAttributes = new { @class = "form-control", Disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.CodigoPostal, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.TipoOperadorID, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.TipoOperadorID, new { htmlAttributes = new { @class = "form-control", Disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.TipoOperadorID, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.TipoOperadorDescripcion, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.TipoOperadorDescripcion, new { htmlAttributes = new { @class = "form-control", Disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.TipoOperadorDescripcion, "", new { @class = "text-danger" })
                    </div>

                    <div class="row align-items-center justify-content-center mt-3">
                        <div class="col-6 mt-3">
                            <div class="d-flex justify-content-evenly mt-4 mb-5 btn-group">
                                @Html.ActionLink(" Editar ", "Edit", new { id = Model.OperadorID }, new { @class = "btn btn-outline-secondary" })
                                @Html.ActionLink(" Regresar ", "Index", new { area = "" }, new { @class = "btn btn-outline-warning" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

